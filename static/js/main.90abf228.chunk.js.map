{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/contacts/contacts-action.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/index.js","components/AuthNav.js","components/AppBar.js","components/Container/index.jsx","components/PrivateRout.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","get","initialUserState","email","createReducer","_","payload","__","setError","error","combineReducers","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterChange","useStyles","createUseStyles","link","color","textDecoration","marginRight","padding","activeLink","border","borderRadius","connect","isAuthanticated","authSelectors","classes","to","exact","className","activeClassName","container","display","justifyContent","alignItems","avatar","fontWeight","button","backgroundColor","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","type","onClick","minWidth","AuthNav","header","borderBottom","height","Container","props","children","Component","component","redirectTo","routeProps","render","restricted","HomeView","lazy","PhoneBook","RegisterView","LoginView","onGetCurrentUser","useEffect","fallback","path","PrivateRout","actions","items","newArr","filter","elem","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90abf228.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { getIsAuthenticated, getUserName };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n// add token to header after success user register\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n// add token to header after success user login\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n//delete token after success user logOut\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logOut');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n// get token from cerrent user state if it exist or do nothing if not exist\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: (_, __) => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","// import actionTypes from \"./contacts-types\";\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// const addContact = createAction(\"form/Add_contact\", ({ id, name, number }) => ({\r\n//   payload: { id, name, number },\r\n// }));\r\n\r\nconst addContactRequest = createAction('form/Add_contactRequest');\r\nconst addContactSuccess = createAction('form/Add_contactSuccess');\r\nconst addContactError = createAction('form/Add_contactError');\r\n\r\nconst deleteContactRequest = createAction('contactList/Delete_contactRequest');\r\nconst deleteContactSuccess = createAction('contactList/Delete_contactSuccess');\r\nconst deleteContactError = createAction('contactList/Delete_contactError');\r\n\r\nconst fetchContactRequest = createAction('contactList/fetch_contactRequest');\r\nconst fetchContactSuccess = createAction('contactList/fetch_contactSuccess');\r\nconst fetchContactError = createAction('contactList/fetch_contactError');\r\n\r\nconst filterChange = createAction('findInput/Filter_change');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterChange,\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst useStyles = createUseStyles({\r\n  link: {\r\n    color: 'black',\r\n    textDecoration: 'none',\r\n    marginRight: '20px',\r\n    padding: '4px 6px',\r\n  },\r\n  activeLink: {\r\n    color: 'blue',\r\n    border: '1px solid blue',\r\n    borderRadius: '4px',\r\n  },\r\n});\r\n\r\nconst Navigation = ({ isAuthanticated }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        Main page\r\n      </NavLink>\r\n      {isAuthanticated && (\r\n        <NavLink\r\n          to=\"/phonebook\"\r\n          exact\r\n          className={classes.link}\r\n          activeClassName={classes.activeLink}\r\n        >\r\n          Phonebook\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst matStateToProps = state => ({\r\n  isAuthanticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(matStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.057d3846.png\";","import { createUseStyles } from 'react-jss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    display: 'flex',\r\n    // flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: '6px',\r\n  },\r\n  name: {\r\n    fontWeight: '700',\r\n    marginRight: '12px',\r\n  },\r\n  button: {\r\n    backgroundColor: 'aqua',\r\n    padding: '6px 8px',\r\n  },\r\n});\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <img src={avatar} className={classes.avatar} alt=\"avatar\" width=\"32\" />\r\n      <span className={classes.name}>Welcome, {name}</span>\r\n      <button className={classes.button} type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { NavLink } from 'react-router-dom';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    display: 'flex',\r\n    width: '20%',\r\n    minWidth: '200px',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  link: {\r\n    color: 'black',\r\n    textDecoration: 'none',\r\n    padding: '4px 6px',\r\n  },\r\n  activeLink: {\r\n    color: 'blue',\r\n    border: '1px solid blue',\r\n    borderRadius: '4px',\r\n  },\r\n});\r\n\r\nconst AuthNav = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport { createUseStyles } from 'react-jss';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\n\r\nconst useStyles = createUseStyles({\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '20px 20px',\r\n    borderBottom: '1px solid #2A3638',\r\n  },\r\n});\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    width: '100vw',\r\n    minWidth: '700px',\r\n    height: '100vh',\r\n    padding: '20px 20px',\r\n  },\r\n});\r\n\r\nconst Container = props => {\r\n  const classes = useStyles();\r\n  return <div className={classes.container}>{props.children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { Switch, Redirect } from 'react-router-dom';\n// import PhoneBook from './components/PhoneBook';\nimport AppBar from './components/AppBar';\n// import HomeView from './components/HomeView';\n// import RegisterView from './components/RegisterView';\n// import LoginView from './components/LoginView';\nimport Container from './components/Container';\nimport { connect } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport { useEffect, Suspense, lazy } from 'react';\nimport PrivateRoute from './components/PrivateRout';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() =>\n  import('./components/HomeView' /* webpackChunkName: \"HomeView\" */),\n);\nconst PhoneBook = lazy(() =>\n  import('./components/PhoneBook' /* webpackChunkName: \"PhoneBook\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./components/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\nconst LoginView = lazy(() =>\n  import('./components/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\n\nfunction App({ onGetCurrentUser }) {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, []);\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/phonebook\"\n            component={RegisterView}\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/phonebook\"\n            component={LoginView}\n          />\n          <PrivateRoute\n            path=\"/phonebook\"\n            component={PhoneBook}\n            redirectTo=\"/\"\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import actionTypes from \"../contacts/contacts-types\";\r\nimport actions from './contacts-action';\r\n\r\nconst {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterChange,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => {\r\n    const newArr = state.filter(elem => elem.id !== payload);\r\n    // console.log(\"action delete:\", newArr);\r\n    return [...newArr];\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactSuccess]: () => null,\r\n  [deleteContactSuccess]: () => null,\r\n  [fetchContactSuccess]: () => null,\r\n  [addContactError]: (state, { payload }) => payload,\r\n  [deleteContactError]: (state, { payload }) => payload,\r\n  [fetchContactError]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport logger from 'redux-logger';\r\nimport { authReducer } from './auth';\r\n\r\n// console.log(\"getDefaultMiddleware \", getDefaultMiddleware());\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import { myAction, myAction2 } from \"./redux/actions\";\n\n// console.log(\"store is: \", store);\n// console.log(\"store dispatch action is: \", store.dispatch(myAction(5)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}